# Node.js Express Web App to Linux on Azure

trigger:
- kgp-production

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: ...

  # Web app name
  webAppName: 'kgp-web'

  # Environment name
  environmentName: 'kgp-web'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        echo -e "\033[0;34m Installing frontend dependencies\033[0m"
        cd frontend
        npm install --force
        echo -e "\033[0;34m Building frontend & moving it to backend directory\033[0m"
        npm run build
        mv build ../backend
        echo -e "\033[0;34m Installing backend dependencies\033[0m"
        cd ../backend
        npm install --force
      displayName: 'Install depencendies & build frontend'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: kgp-web'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|16.16'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'